// RobotBuilder Version: 4.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;

import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_VictorSPX;
import edu.wpi.first.wpilibj.DigitalInput;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/**
 *
 */
public class SCurve extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private DigitalInput ballSenseTop;
private DigitalInput ballSenseMid;
private DigitalInput ballSenseBot;
private WPI_VictorSPX sCRV;
private WPI_VictorSPX iIN;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    /**
    *
    */
    public SCurve() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
ballSenseTop = new DigitalInput(1);
 addChild("Ball Sense Top", ballSenseTop);
 

ballSenseMid = new DigitalInput(2);
 addChild("Ball Sense Mid", ballSenseMid);
 

ballSenseBot = new DigitalInput(3);
 addChild("Ball Sense Bot", ballSenseBot);
 

sCRV = new WPI_VictorSPX(23);
 
 

iIN = new WPI_VictorSPX(22);
 
 


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

        iIN.setInverted(true);
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    public void setSCurveSpeed(double speed) {
        if (speed < -1 || speed > 1) {
            // Speed out of bounds, stop Scurv.
            speed = 0;
        }
        sCRV.set(speed); // Set SCurve to speed
    }

    public double getSCurveSpeed() {
        return sCRV.get();
    }

    public void setIntakeSpeed(double speed) {
        if (speed < -1 || speed > 1) {
            // Speed out of bounds, stop Scurv.
            speed = 0;
        }
        iIN.set(speed); // Set SCurve to speed
    }

    public double getIntakeSpeed() {
        return iIN.get();
    }

    public boolean isBottomSensorTriggered(){
        return ballSenseBot.get();
    }

    public boolean isMiddleSensorTriggered(){
        return ballSenseMid.get();
    }

    public boolean isTopSensorTriggered(){
        return ballSenseTop.get();
    }
    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}
